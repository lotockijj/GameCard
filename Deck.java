package GamePromt2;
/*
ѕан
 
 оличество колод: 1
 оличество карт в колоде: от 24 до 52
 оличество игроков: 2 - 6
—таршинство карт: 2, 3, 4, 5, 6, 7, 8, 9, 10, ¬, ƒ,  , “.
÷ель игры: остатьс€ без карт.
ѕравила игры. ѕервый сдатчик определ€етс€ по жребию, 
в следующих играх игроки сдают карты по очереди.  олода 
тщательно тасуетс€, снимаетс€ и карты раздаютс€ поровну 
между всеми игроками. ѕервым ходит игрок, у которого 
имеетс€ 9 червы (если у этого игрока есть еще 3 дев€тки, 
то он может положить из вместе с дев€ткой червы). —ледующий 
игрок по часовой стрелке должен положить сверху либо карту 
такого же достоинства, либо большего достоинства. ≈сли у 
игрока есть 4 карты одного достоинства, то он может положить 
их одновременно за один ход. ≈сли игрок не может или не желает 
положить очередную карту, то он об€зан вз€ть 3 верхние карты 
(червова€ дев€тка не беретс€). ѕо договоренност€м перед игрой 
можно играть по измененным правилам, например, все карты 
кладутс€ одна на другую при этом нельз€ подсматривать, какие 
карты уже лежат в колоде. ¬ыигрывает игрок, который первым 
останетс€ без карт. ≈сли требуетс€ определить одного проигравшего, 
то играют до тех пор, пока не останетс€ один игрок с картами 
на руках.
*/
import java.util.ArrayList;

public class Deck {
	public static String[] suit = {"Spades", "Clubs", "Hearts", "Diamonds"};
	public static String[] rank = {"2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K", "Ace"};
	ArrayList<Card> DeckOfCard = new ArrayList<Card>();
	ArrayList<Card> ShortDeckOfCard = new ArrayList<Card>(); 
	
	public  ArrayList<Card> createDeck(){
		for(int i = 0; i < suit.length; i++){
			for(int j = 0; j < rank.length; j++){
				Card c = new Card(suit[i], rank[j]); 
				DeckOfCard.add(c);
				//System.out.println(c.rank + " " + c.suit);
			}
		}
		return DeckOfCard; 
	}
	public ArrayList<Card> createShortDeck(){
		for(int i = 0; i < suit.length; i++){
			for(int j = 0; j < rank.length - 7; j++){
				Card m = new Card(suit[i], rank[j+7]); 
				ShortDeckOfCard.add(m);
				//System.out.println(m.rank + " " + m.suit);
			}
		}
		return ShortDeckOfCard;
	}
}
